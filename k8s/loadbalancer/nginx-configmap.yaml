apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-lb-config
  namespace: save-app
data:
  nginx.conf: |
    worker_processes auto;
    worker_rlimit_nofile 65535;
    
    error_log /var/log/nginx/error.log warn;
    pid /tmp/nginx.pid;
    
    events {
        worker_connections 4096;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging format
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';
        
        access_log /var/log/nginx/access.log main;
        
        # Performance optimizations
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 50m;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            application/atom+xml
            application/geo+json
            application/javascript
            application/x-javascript
            application/json
            application/ld+json
            application/manifest+json
            application/rdf+xml
            application/rss+xml
            application/xhtml+xml
            application/xml
            font/eot
            font/otf
            font/ttf
            image/svg+xml
            text/css
            text/javascript
            text/plain
            text/xml;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
        limit_req_zone $binary_remote_addr zone=extract:10m rate=10r/m;
        limit_req_zone $binary_remote_addr zone=upload:10m rate=5r/m;
        
        # Connection limiting
        limit_conn_zone $binary_remote_addr zone=addr:10m;
        
        # Upstream definitions with health checks
        upstream save_backend {
            least_conn;
            keepalive 32;
            
            # Backend servers with health checks
            server save-app-0.save-app.save-app.svc.cluster.local:3001 max_fails=3 fail_timeout=30s;
            server save-app-1.save-app.save-app.svc.cluster.local:3001 max_fails=3 fail_timeout=30s;
            server save-app-2.save-app.save-app.svc.cluster.local:3001 max_fails=3 fail_timeout=30s;
        }
        
        upstream save_workers {
            least_conn;
            keepalive 16;
            
            # Worker servers
            server save-workers-0.save-workers.save-app.svc.cluster.local:3002 max_fails=2 fail_timeout=15s;
            server save-workers-1.save-workers.save-app.svc.cluster.local:3002 max_fails=2 fail_timeout=15s;
        }
        
        # SSL/TLS Configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # Security headers map
        map $sent_http_content_type $csp_header {
            ~^text/html "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' ws: wss:";
            default "";
        }
        
        # Health check endpoint
        server {
            listen 8080;
            server_name _;
            
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            location /nginx_status {
                stub_status on;
                access_log off;
                allow 127.0.0.1;
                allow 10.0.0.0/8;
                deny all;
            }
        }
        
        # HTTP server (redirect to HTTPS)
        server {
            listen 80;
            server_name save.app www.save.app;
            
            # Let's Encrypt challenge
            location /.well-known/acme-challenge/ {
                root /var/www/certbot;
            }
            
            location / {
                return 301 https://$server_name$request_uri;
            }
        }
        
        # HTTPS server
        server {
            listen 443 ssl http2;
            server_name save.app www.save.app;
            
            # SSL certificates
            ssl_certificate /etc/nginx/certs/fullchain.pem;
            ssl_certificate_key /etc/nginx/certs/privkey.pem;
            ssl_trusted_certificate /etc/nginx/certs/chain.pem;
            
            # Security headers
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            add_header Content-Security-Policy $csp_header always;
            add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
            
            # Connection limiting
            limit_conn addr 10;
            
            # API endpoints
            location /api/ {
                limit_req zone=api burst=60 nodelay;
                
                # CORS headers
                add_header Access-Control-Allow-Origin "https://save.app" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
                add_header Access-Control-Max-Age 86400 always;
                
                if ($request_method = 'OPTIONS') {
                    add_header Access-Control-Allow-Origin "https://save.app";
                    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
                    add_header Access-Control-Max-Age 86400;
                    return 204;
                }
                
                proxy_pass http://save_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-Host $server_name;
                proxy_set_header Connection "";
                proxy_http_version 1.1;
                
                # Timeouts
                proxy_connect_timeout 30s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
                
                # Buffering
                proxy_buffer_size 4k;
                proxy_buffers 8 4k;
                proxy_busy_buffers_size 8k;
            }
            
            # Extraction API (higher rate limits)
            location /api/extract {
                limit_req zone=extract burst=20 nodelay;
                
                proxy_pass http://save_workers;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Connection "";
                proxy_http_version 1.1;
                
                # Longer timeouts for extraction
                proxy_connect_timeout 30s;
                proxy_send_timeout 300s;
                proxy_read_timeout 300s;
            }
            
            # WebSocket support
            location /api/ws {
                proxy_pass http://save_backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # WebSocket timeouts
                proxy_read_timeout 3600s;
                proxy_send_timeout 3600s;
            }
            
            # Static file serving with caching
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                root /usr/share/nginx/html;
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary "Accept-Encoding";
                
                # Fallback to backend if not found
                try_files $uri @backend_static;
            }
            
            location @backend_static {
                proxy_pass http://save_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            # Frontend app
            location / {
                root /usr/share/nginx/html;
                index index.html;
                try_files $uri $uri/ /index.html;
                
                # Cache policy for SPA
                location = /index.html {
                    add_header Cache-Control "no-cache, must-revalidate";
                    expires 0;
                }
                
                location ~* \.(json|txt|xml)$ {
                    add_header Cache-Control "no-cache, must-revalidate";
                    expires 0;
                }
            }
            
            # Monitoring endpoints
            location /metrics {
                access_log off;
                allow 10.0.0.0/8;
                deny all;
                
                proxy_pass http://save_backend/metrics;
                proxy_set_header Host $host;
            }
        }
    }